version: '3.8'

x-deploy: &default-deploy
  init: true
  build:
    context: .
  environment:
    AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  env_file:
    - .env

services:
  deploy:
    init: true
    build:
      context: .
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      SLS_STAGE: ${SLS_STAGE}
      CC_API_BASE_URL: ${CC_API_BASE_URL}
      CC_AUTH_TOKEN: ${CC_AUTH_TOKEN}
      WS_CALLBACK_URL: ${WS_CALLBACK_URL}
      AWS_DAX_ENDPOINT: ${AWS_DAX_ENDPOINT}
      RELIC_API_KEY: ${RELIC_API_KEY}
      LOGGING_ENABLED: ${LOGGING_ENABLED}

  deploy-dev:
    <<: *default-deploy
    command: ['deploy:dev']
    env_file:
      - .env
      - .env.dev

  deploy-staging:
    <<: *default-deploy
    command: ['deploy:staging']
    env_file:
      - .env
      - .env.staging

  deploy-prod:
    <<: *default-deploy
    command: ['deploy:prod']
    env_file:
      - .env
      - .env.prod

  localstack:
    image: localstack/localstack:latest
    ports:
      - 4566:4566
    environment:
      SERVICES: 'serverless'
      START_WEB: '0'

  tester:
    init: true
    build:
      context: .
      dockerfile: Dockerfile.test
    user: ${CURRENT_UID:-1000:1000}
    env_file:
      - .env
      - .env.test
    environment:
      LOCAL_DYNAMO_ENDPOINT: http://localstack:4566
      CI: 1
    entrypoint: ['yarn']
    command: ['test:ci']
    depends_on:
      - localstack
    volumes:
      - ./:/app
